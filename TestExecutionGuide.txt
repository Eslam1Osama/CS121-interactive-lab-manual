CS121 Interactive Lab Manual – Manual Testing Execution Guide

Purpose
This guide teaches any tester (even new joiners) how to run the full manual test pass efficiently, capture results consistently, and raise high‑quality defects. Follow it top‑to‑bottom for the first run, then use the quick checklists for regressions.

1) What you need (tools and accounts)
• Browsers: Chrome, Firefox, Edge (Windows), Safari (macOS/iOS). Latest stable.
• OS/Devices: Windows 10+, macOS 12+, iPhone/Android phone (one each, real devices preferred).
• Extensions/Software:
  - Axe DevTools or WAVE (accessibility quick scan)
  - Lighthouse (built into Chrome DevTools)
  - Screen reader: NVDA (Windows) or VoiceOver (macOS/iOS)
  - Any link checker (e.g., “Check My Links”) – optional
• Network: A fast connection and the ability to throttle in DevTools (Network tab).
• Repo artifacts: TestCases.csv (open in Excel), Summary.csv (overview).

2) Prepare the Excel sheet (in‑cell line breaks)
• Open TestCases.csv in Excel
• Press Ctrl+A then Home > Wrap Text
• Replace literal \n with real line breaks:
  - Ctrl+H (Find/Replace)
  - Find what: \n
  - Replace with: Ctrl+J (looks blank)
  - Replace All
• Columns to fill during execution: “Actual Result”, “Status”, “Remarks”. Use consistent wording and add screenshots links if needed.

3) Severity / Priority (use these consistently)
• High / P1: Breaks core flows or accessibility blockers; must fix before release
• Medium / P2: Significant but has a workaround; should fix soon
• Low / P3: Cosmetic or minor improvement; fix when convenient

4) Golden testing sequence (first full run)
Run in this order to surface high‑risk issues early:
  A. Smoke & Navigation
     - UI‑001..UI‑009 then RESP‑010..RESP‑012
  B. Core Functionality
     - FUNC‑013..FUNC‑031 (modals, K‑Maps, copy, SW/offline)
  C. Accessibility Essentials
     - ACC‑032..ACC‑039 (alt, keyboard, focus, ARIA, SR)
  D. Performance & Caching
     - PERF‑040..PERF‑045 (FCP, preload, caching, offline)
  E. Cross‑Browser Pass
     - XBR‑046..XBR‑049 (Chrome, Firefox, Safari, Edge)
  F. Security & SEO
     - SEC‑050..SEC‑055, SEO‑056..SEO‑061
  G. Analytics, Errors, Content
     - ANL‑062..ANL‑063, ERR‑064..ERR‑066, CNT‑067..CNT‑069
  H. PWA & Media & Interaction polish
     - PWA‑070..PWA‑071, MEDIA‑072, INT‑073..INT‑076
  I. Final hygiene & regressions
     - SEC‑077..SEC‑078, LOG‑079, UX‑080..UX‑082, QA‑083,
       SEO‑084..SEO‑085, A11Y‑086..A11Y‑087, SEC‑088, CACHE‑089,
       UX‑090, FUNC‑091, MEDIA‑092, A11Y‑093, SEC‑094, SEO‑095,
       BUILD‑096, PERF‑097, UX‑098, ERR‑099, SEO‑100

5) How to execute a test case (repeatable micro‑routine)
For each row in TestCases.csv:
• Read: Scenario + Description + Preconditions
• Setup: Ensure environment matches “Preconditions” (e.g., SW installed, HTTPS, device width)
• Run Steps: Perform each step exactly; if unclear, restate in your words, then proceed
• Observe: Compare to “Expected Result” only; avoid guessing intended behavior
• Record: Fill “Actual Result” in neutral language (what you saw, not what you think should happen)
• Decide Status:
  - Pass: Behavior matches Expected Result
  - Fail: Any deviation that isn’t explained by a known limitation
  - Blocked: You cannot execute due to environment or previous failure
• Remarks: Add URLs, screen size, device, and screenshot names, e.g., “mobile‑375px‑chrome.png”

6) Environment setup quick‑actions (DevTools recipes)
• Change viewport size: DevTools > Toggle device toolbar > pick presets (375, 768, 1440)
• Network throttling: DevTools > Network > Throttle > Slow 3G / Fast 3G
• Disable JavaScript: DevTools > Command Menu (Ctrl+Shift+P) > “Disable JavaScript”
• Go Offline: DevTools > Network > Offline
• Clear caches: DevTools > Application > Clear storage (select and “Clear site data”)
• Service Worker lifecycle: Application > Service Workers (check status, unregister, update)

7) Accessibility execution hints
• Alt text: Inspect representative <img> elements; ensure meaningful, not decorative (unless role=presentation)
• Keyboard only: Tab through; verify visible focus and logical order; ensure modals trap focus and ESC closes
• Axe scan: Run; fix critical violations first (color contrast, name/role/value, label association)
• Screen reader:
  - NVDA (Windows): Open, then navigate headings (H), links (K), forms (F); open a modal and ensure announcement
  - VoiceOver (macOS/iOS): VO+U rotor on headings/links; verify announcements and focus return

8) Performance & PWA checks
• Lighthouse (desktop and mobile): Record FCP/LCP/CLS scores and screenshots
• Preload validation: Elements tab search for <link rel=preload as=script>; verify no “preloaded but not used” warnings
• Caching: Application > Cache Storage; verify cache names and entries; ensure old caches are purged after deploy
• Offline: Switch to Offline and reload; confirm offline.html branding and a path back when online returns
• Installability: Check “Install” icon; manifest has name, start_url, scope, display=standalone

9) Cross‑browser matrix (record in Remarks)
• Chrome (Windows/macOS): primary reference browser
• Firefox (Windows/macOS): check focus outlines, keyboard nav, and clipboard
• Edge (Windows): verify service worker and clipboard paths
• Safari (macOS/iOS): check scroll/touch inertia, PWA install on iOS, and VoiceOver labels

10) Content validation approach
• Pick 2–3 representative labs per pass; scan for typos, consistency of terminology (e.g., “K‑Map”, “JK Flip‑Flop”)
• Validate math/logic against syllabus or SME notes (Lab6 simplifications, Lab11 counter sequence)
• Ensure all figures match captions and are readable on mobile

11) Defect reporting template (copy/paste)
Title: [Area] Short summary (e.g., Lab11 – Single pulse advances two steps at 2Hz)
Environment: Browser/OS/Device, URL
Steps to Reproduce:
1.
2.
3.
Expected:
Actual:
Attachments: screenshot(s) + console log (if relevant)
Severity/Priority: (e.g., High/P1)
Notes: (include cache/state details – SW installed?, offline?)

12) Regression suite (run before each deploy)
• UI‑001, RESP‑012 – basic layout and mobile check
• FUNC‑013, FUNC‑015, FUNC‑016 – modal + K‑Map validation and nav
• FUNC‑021, FUNC‑024, FUNC‑025 – Lab6 & Lab11 critical flows
• FUNC‑031 – Offline fallback works
• PERF‑041, PERF‑043 – Preload and caching sane
• SEC‑050, SEC‑051 – HTTPS and no mixed content
• SEO‑056, SEO‑057 – Meta and OpenGraph OK
• ERR‑065, BUILD‑096 – No broken/mis‑cased assets

13) Timeboxing guidance
• Full pass (first run): 4–6 hours across devices
• Daily smoke: 20–30 minutes (regression suite only)
• Accessibility quick scan: 15 minutes (axe + keyboard run)
• Performance snapshot: 10 minutes (Lighthouse mobile + desktop)

14) Data you should capture for each failure
• URL and section/lab
• Browser + version, OS + version, device or viewport width
• Steps, Expected, Actual (copied into Excel)
• Screenshot(s) and, if helpful, short screen recording
• Console and Network highlights (copy/paste or export HAR)

15) Tips for accuracy and repeatability
• Reset between major scenarios: Clear storage and unregister SW when needed
• Keep one tab per browser during runs to avoid shared cache confusion
• When in doubt, re‑test after hard reload (Ctrl+Shift+R) and with fresh SW
• Note whether the issue reproduces consistently or intermittently

16) When you’re done
• Ensure every row in TestCases.csv has Actual Result, Status, and Remarks (where applicable)
• Summarize blockers and High/P1 defects first
• Update Summary.csv if the distribution meaningfully changes

Appendix – Sample execution for FUNC‑016 (keyboard navigation between K‑Map cells)
Preconditions: Lab5 open; page loaded over HTTPS
Steps:
1) Click first K‑Map input in Lab5
2) Press ArrowRight three times; press ArrowDown once; press Tab and Shift+Tab
Expected: Focus moves predictably cell‑by‑cell; no skips; Tab/Shift+Tab move row‑wise; focus ring visible
Record: Actual observed path; if mismatch, note which key misrouted focus and add a screenshot

That’s it—you’re ready. Start at Section 4, follow the sequence, and keep Excel open beside the site.

